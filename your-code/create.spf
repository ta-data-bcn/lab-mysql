<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>lab_mysql</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>kcid</key>
			<string>-6665033987035693676</string>
			<key>name</key>
			<string>localhost</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8</string>
			<key>contentFilterV2</key>
			<dict>
				<key>children</key>
				<array/>
				<key>filterClass</key>
				<string>groupNode</string>
				<key>isConjunction</key>
				<true/>
			</dict>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0
			b3BYJG9iamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRk
			YXRhgAGoCwwXGBkaHiVVJG51bGzTDQ4PEBMWV05TLmtleXNaTlMu
			b2JqZWN0c1YkY2xhc3OiERKAAoADohQVgASABYAHVHR5cGVUcm93
			c18QHVNlbGVjdGlvbkRldGFpbFR5cGVOU0luZGV4U2V00hsPHB1c
			TlNSYW5nZUNvdW50EACABtIfICEiWiRjbGFzc25hbWVYJGNsYXNz
			ZXNaTlNJbmRleFNldKIjJFpOU0luZGV4U2V0WE5TT2JqZWN00h8g
			JidcTlNEaWN0aW9uYXJ5oiYkAAgAEQAaACQAKQAyADcASQBMAFEA
			UwBcAGIAaQBxAHwAgwCGAIgAigCNAI8AkQCTAJgAnQC9AMIAzwDR
			ANMA2ADjAOwA9wD6AQUBDgETASAAAAAAAAACAQAAAAAAAAAoAAAA
			AAAAAAAAAAAAAAABIw==
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {695, 481}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>CREATE DATABASE IF NOT EXISTS lab_mysql;
CREATE TABLE IF NOT EXISTS cars (VIN INT PRIMARY KEY, Manufacturer VARCHAR(15), Model VARCHAR(15), Year INT, Color VARCHAR(10));
CREATE TABLE IF NOT EXISTS customers (ID INT PRIMARY KEY, `Name` VARCHAR(15), `Phone number` INT, Email VARCHAR(25), Address VARCHAR(50), City VARCHAR(20), `Postal Code` INT);
CREATE TABLE IF NOT EXISTS salespersons (staff_ID INT PRIMARY KEY, `Name` VARCHAR(15), Store VARCHAR(25));
CREATE TABLE IF NOT EXISTS invoices (inovice_number INT PRIMARY KEY, `Date` DATE, cust_ID INT, staff_ID INT);</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>214</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>SELECT * FROM cars</string>
		<string>CREATE TABLE IF NOT EXISTS invoices (inovice_number INT PRIMARY KEY, `Date` DATE, cust_ID INT, staff_ID INT)</string>
		<string>CREATE TABLE IF NOT EXISTS salespersons (staff_ID INT PRIMARY KEY, `Name` VARCHAR(15), Store VARCHAR(25))</string>
		<string>SELECT * FROM CUSTOMERS</string>
		<string>CREATE TABLE IF NOT EXISTS customers (ID INT PRIMARY KEY, `Name` VARCHAR(15), `Phone number` INT, Email VARCHAR(25), Address VARCHAR(50), City VARCHAR(20), `Postal Code` INT)</string>
		<string>USE `lab_mysql`</string>
		<string>SELECT `au_id`,`title_id`, `ROYALTIES`, `ADVANCE`, ROYALTIES + ADVANCE AS `TOTAL ROYALTIES`
FROM
(SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `ROYALTIES`, ROUND(AVG(titles.`advance` * titleauthor.`royaltyper`/100),2) as `ADVANCE`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`, titleauthor.`title_id`) AS GROUPED_TABLE
ORDER BY `TOTAL ROYALTIES` DESC</string>
		<string>SELECT `au_id`,`title_id`, `ROYALTIES`, `ADVANCE`, ROYALTIES + ADVANCE AS `TOTAL ROYALTIES`
FROM
(SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `ROYALTIES`, ROUND(AVG(titles.`advance` * titleauthor.`royaltyper`/100),2) as `ADVANCE`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`, titleauthor.`title_id`) AS GROUPED_TABLE</string>
		<string>SELECT `au_id`,`title_id`, `ROYALTIES`, `ADVANCE`, ROYALTIES + ADVANCE AS `TOTAL ROYALTIES`
FROM
(SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `ROYALTIES`, ROUND(AVG(titles.`advance` * titleauthor.`royaltyper`/100),2) as `ADVANCE`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`, titleauthor.`title_id`)</string>
		<string>SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `ROYALTIES`, ROUND(AVG(titles.`advance` * titleauthor.`royaltyper`/100),2) as `ADVANCE`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`, titleauthor.`title_id`
ORDER BY `ROYALTIES` DESC</string>
		<string>SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `ROYALTIES`, ROUND(AVG(titles.`advance` * titleauthor.`royaltyper`/100),2) as `ADVANCE`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`, titleauthor.`title_id`
ORDER BY `TOTAL ROYALTIES` DESC</string>
		<string>SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `ROYALTIES`, ROUND(AVG(titles.`advance` * titleauthor.`royaltyper`/100),2) as `ADVANCE`, `ROYALTIES` + `ADVANCE` AS `TOTAL ROYALTIES`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`, titleauthor.`title_id`
ORDER BY `TOTAL ROYALTIES` DESC</string>
		<string>SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `TOTAL ROYALTIES`, ROUND(AVG(titles.`advance` * titleauthor.`royaltyper`/100),2) as `ADVANCE`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`, titleauthor.`title_id`
ORDER BY `TOTAL ROYALTIES` DESC</string>
		<string>SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `TOTAL ROYALTIES`, AVG(ROUND(titles.`advance` * titleauthor.`royaltyper`/100,2)) as `ADVANCE`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`, titleauthor.`title_id`
ORDER BY `TOTAL ROYALTIES` DESC</string>
		<string>SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `TOTAL ROYALTIES`, ROUND(titles.`advance` * titleauthor.`royaltyper`/100,2) as `ADVANCE`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`, titleauthor.`title_id`
ORDER BY `TOTAL ROYALTIES` DESC</string>
		<string>SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `TOTAL ROYALTIES`, titles.`advance` * titleauthor.`royaltyper`/100 as `ADVANCE`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`, titleauthor.`title_id`
ORDER BY `TOTAL ROYALTIES` DESC</string>
		<string>SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `TOTAL ROYALTIES`, titles.`advance` * titleauthor.`royaltyper` as `ADVANCE`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`, titleauthor.`title_id`
ORDER BY `TOTAL ROYALTIES` DESC</string>
		<string>SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `TOTAL ROYALTIES`, titles.`advance` as `ADVANCE`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`, titleauthor.`title_id`
ORDER BY `TOTAL ROYALTIES` DESC</string>
		<string>SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `TOTAL ROYALTIES`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`, titleauthor.`title_id`
ORDER BY `TOTAL ROYALTIES` DESC</string>
		<string>SELECT titleauthor.`au_id`,`titleauthor`.`title_id`, ROUND (SUM(sales.qty * titles.price * titles.royalty/100 * titleauthor.royaltyper/100),2) AS `TOTAL ROYALTIES`
FROM titleauthor
LEFT JOIN titles ON titles.`title_id` = titleauthor.`title_id`
LEFT JOIN sales ON sales.`title_id` = titleauthor.`title_id`
GROUP BY titleauthor.`au_id`
ORDER BY `TOTAL ROYALTIES` DESC</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>8.0.19</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
